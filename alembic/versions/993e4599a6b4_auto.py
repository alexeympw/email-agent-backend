"""auto

Revision ID: 993e4599a6b4
Revises: 0002_add_smtp_ssl
Create Date: 2025-10-18 11:12:59.998324

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '993e4599a6b4'
down_revision = '0002_add_smtp_ssl'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    
    # Create default user for existing campaigns
    op.execute("""
        INSERT INTO users (email, name, is_active, created_at, updated_at) 
        VALUES ('a@aiemailnewsletter.com', 'Admin User', true, NOW(), NOW())
    """)
    
    op.create_table('api_keys',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('key_name', sa.String(length=255), nullable=False),
    sa.Column('key_hash', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('last_used_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('expires_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('key_hash'),
    sa.UniqueConstraint('user_id', 'key_name', name='uq_user_key_name')
    )
    
    # Add user_id column as nullable first
    op.add_column('campaigns', sa.Column('user_id', sa.Integer(), nullable=True))
    
    # Update existing campaigns to use the default user (only if there are campaigns)
    op.execute("""
        UPDATE campaigns 
        SET user_id = (SELECT id FROM users WHERE email = 'a@aiemailnewsletter.com')
        WHERE user_id IS NULL
    """)
    
    # Verify that all campaigns now have user_id set
    op.execute("""
        DO $$
        BEGIN
            IF EXISTS (SELECT 1 FROM campaigns WHERE user_id IS NULL) THEN
                RAISE EXCEPTION 'Some campaigns still have NULL user_id after update';
            END IF;
        END $$;
    """)
    
    # Now make the column NOT NULL
    op.alter_column('campaigns', 'user_id', nullable=False)
    
    # Add foreign key constraint
    op.create_foreign_key(None, 'campaigns', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint('campaigns_user_id_fkey', 'campaigns', type_='foreignkey')
    op.drop_column('campaigns', 'user_id')
    op.drop_table('api_keys')
    op.drop_table('users')
    # ### end Alembic commands ###
